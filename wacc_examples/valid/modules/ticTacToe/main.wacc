begin
  import "./debug.wacc"
  import "./memory.wacc"
  import "./engine.wacc"
  import "./AI.wacc"
  import "./interface.wacc"
	char playerSymbol = call chooseSymbol() ;
	char aiSymbol = call oppositeSymbol(playerSymbol) ;
	char currentTurn = 'x' ;
	
	pair(pair, pair) board = call allocateNewBoard() ;
	
	println "Initialising AI. Please wait, this may take a few minutes." ;
	pair(pair, pair) aiData = call initAI(aiSymbol) ;
	
	int turnCount = 0 ;
	char winner = '\0' ;
	
	bool _ = call printBoard(board) ;
	
	while winner == '\0' && turnCount < 9 do
		int[] move = [0, 0] ;
		_ = call askForAMove(board, currentTurn, playerSymbol, aiData, move) ;
		_ = call placeMove(board, currentTurn, move[0], move[1]) ;
		_ = call notifyMove(board, currentTurn, playerSymbol, aiData, move[0], move[1]) ;
		_ = call printBoard(board) ;
		bool won = call hasWon(board, currentTurn) ;
		if won then
			winner = currentTurn
		else 
			skip
		fi ;
		
		# Progress to the next turn
		currentTurn = call oppositeSymbol(currentTurn) ;
		turnCount = turnCount + 1
	done ;
	
	_ = call freeBoard(board) ;
	_ = call destroyAI(aiData) ;
	
	if winner != '\0' then
		print winner ;
		println " has won!" 
	else 
		println "Stalemate!" 
	fi
end