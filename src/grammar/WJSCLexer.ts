// Generated from WJSCLexer.g4 by ANTLR 4.6-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class WJSCLexer extends Lexer {
	public static readonly EOL = 1;
	public static readonly WHITESPACE = 2;
	public static readonly EXPORT = 3;
	public static readonly IMPORT = 4;
	public static readonly DEFINE = 5;
	public static readonly EXTERN = 6;
	public static readonly BEGIN = 7;
	public static readonly END = 8;
	public static readonly IS = 9;
	public static readonly WSKIP = 10;
	public static readonly READ = 11;
	public static readonly FREE = 12;
	public static readonly RETURN = 13;
	public static readonly EXIT = 14;
	public static readonly PRINT = 15;
	public static readonly PRINTLN = 16;
	public static readonly IF = 17;
	public static readonly THEN = 18;
	public static readonly ELSE = 19;
	public static readonly FI = 20;
	public static readonly WHILE = 21;
	public static readonly DO = 22;
	public static readonly DONE = 23;
	public static readonly CALL = 24;
	public static readonly FIRST = 25;
	public static readonly SECOND = 26;
	public static readonly MULTIPLY = 27;
	public static readonly DIVIDE = 28;
	public static readonly MODULO = 29;
	public static readonly PLUS = 30;
	public static readonly MINUS = 31;
	public static readonly GREATER_THAN = 32;
	public static readonly GREATER_EQUAL = 33;
	public static readonly LESS_THAN = 34;
	public static readonly LESS_EQUAL = 35;
	public static readonly EQUALS = 36;
	public static readonly STRICT_EQUALS = 37;
	public static readonly NEQUALS = 38;
	public static readonly NSTRICT_EQUALS = 39;
	public static readonly LOGICAL_AND = 40;
	public static readonly LOGICAL_OR = 41;
	public static readonly ASSIGNMENT = 42;
	public static readonly LOGICAL_NEGATION = 43;
	public static readonly NEW_PAIR = 44;
	public static readonly LENGTH = 45;
	public static readonly ORDER_OF = 46;
	public static readonly CHARACTER_OF = 47;
	public static readonly DIGIT = 48;
	public static readonly BOOLEAN_LITERAL = 49;
	public static readonly CHARACTER_LITERAL = 50;
	public static readonly PAIR_LITERAL = 51;
	public static readonly STRING_LITERAL = 52;
	public static readonly INTEGER = 53;
	public static readonly BOOLEAN = 54;
	public static readonly CHARACTER = 55;
	public static readonly STRING = 56;
	public static readonly PAIR = 57;
	public static readonly VOID = 58;
	public static readonly LPAREN = 59;
	public static readonly RPAREN = 60;
	public static readonly LBRACK = 61;
	public static readonly RBRACK = 62;
	public static readonly COMMA = 63;
	public static readonly SEMICOLON = 64;
	public static readonly APOS = 65;
	public static readonly DBLQ = 66;
	public static readonly COMMENT = 67;
	public static readonly IDENTIFIER = 68;
	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"EOL", "WHITESPACE", "EXPORT", "IMPORT", "DEFINE", "EXTERN", "BEGIN", 
		"END", "IS", "WSKIP", "READ", "FREE", "RETURN", "EXIT", "PRINT", "PRINTLN", 
		"IF", "THEN", "ELSE", "FI", "WHILE", "DO", "DONE", "CALL", "FIRST", "SECOND", 
		"MULTIPLY", "DIVIDE", "MODULO", "PLUS", "MINUS", "GREATER_THAN", "GREATER_EQUAL", 
		"LESS_THAN", "LESS_EQUAL", "EQUALS", "STRICT_EQUALS", "NEQUALS", "NSTRICT_EQUALS", 
		"LOGICAL_AND", "LOGICAL_OR", "ASSIGNMENT", "LOGICAL_NEGATION", "NEW_PAIR", 
		"LENGTH", "ORDER_OF", "CHARACTER_OF", "DIGIT", "BOOLEAN_LITERAL", "BACKSLASH", 
		"ESCAPED_CHAR", "NON_ESCAPED", "CHAR", "CHARACTER_LITERAL", "PAIR_LITERAL", 
		"STRING_LITERAL", "INTEGER", "BOOLEAN", "CHARACTER", "STRING", "PAIR", 
		"VOID", "LPAREN", "RPAREN", "LBRACK", "RBRACK", "COMMA", "SEMICOLON", 
		"APOS", "DBLQ", "NL", "COMMENT", "IDENTIFIER",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, "'export'", "'import'", "'define'", "'extern'", 
		"'begin'", "'end'", "'is'", "'skip'", "'read'", "'free'", "'return'", 
		"'exit'", "'print'", "'println'", "'if'", "'then'", "'else'", "'fi'", 
		"'while'", "'do'", "'done'", "'call'", "'fst'", "'snd'", "'*'", "'/'", 
		"'%'", "'+'", "'-'", "'>'", "'>='", "'<'", "'<='", "'=='", "'==='", "'!='", 
		"'!=='", "'&&'", "'||'", "'='", "'!'", "'newpair'", "'len'", "'ord'", 
		"'chr'", undefined, undefined, undefined, "'null'", undefined, "'int'", 
		"'bool'", "'char'", "'string'", "'pair'", "'void'", "'('", "')'", "'['", 
		"']'", "','", "';'", "'''", "'\"'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "EOL", "WHITESPACE", "EXPORT", "IMPORT", "DEFINE", "EXTERN", 
		"BEGIN", "END", "IS", "WSKIP", "READ", "FREE", "RETURN", "EXIT", "PRINT", 
		"PRINTLN", "IF", "THEN", "ELSE", "FI", "WHILE", "DO", "DONE", "CALL", 
		"FIRST", "SECOND", "MULTIPLY", "DIVIDE", "MODULO", "PLUS", "MINUS", "GREATER_THAN", 
		"GREATER_EQUAL", "LESS_THAN", "LESS_EQUAL", "EQUALS", "STRICT_EQUALS", 
		"NEQUALS", "NSTRICT_EQUALS", "LOGICAL_AND", "LOGICAL_OR", "ASSIGNMENT", 
		"LOGICAL_NEGATION", "NEW_PAIR", "LENGTH", "ORDER_OF", "CHARACTER_OF", 
		"DIGIT", "BOOLEAN_LITERAL", "CHARACTER_LITERAL", "PAIR_LITERAL", "STRING_LITERAL", 
		"INTEGER", "BOOLEAN", "CHARACTER", "STRING", "PAIR", "VOID", "LPAREN", 
		"RPAREN", "LBRACK", "RBRACK", "COMMA", "SEMICOLON", "APOS", "DBLQ", "COMMENT", 
		"IDENTIFIER",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(WJSCLexer._LITERAL_NAMES, WJSCLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return WJSCLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(WJSCLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "WJSCLexer.g4"; }

	// @Override
	public get ruleNames(): string[] { return WJSCLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return WJSCLexer._serializedATN; }

	// @Override
	public get modeNames(): string[] { return WJSCLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uAF6F\u8320\u479D\uB75C\u4880\u1605\u191C\uAB37\x02F\u01CF\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x042\t2\x043\t3\x04" +
		"4\t4\x045\t5\x046\t6\x047\t7\x048\t8\x049\t9\x04:\t:\x04;\t;\x04<\t<\x04" +
		"=\t=\x04>\t>\x04?\t?\x04@\t@\x04A\tA\x04B\tB\x04C\tC\x04D\tD\x04E\tE\x04" +
		"F\tF\x04G\tG\x04H\tH\x04I\tI\x04J\tJ\x03\x02\x03\x02\x03\x02\x05\x02\x99" +
		"\n\x02\x03\x02\x03\x02\x03\x03\x06\x03\x9E\n\x03\r\x03\x0E\x03\x9F\x03" +
		"\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03" +
		"\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03" +
		"\x06\x03\x06\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\x07\x03" +
		"\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b\x03\b\x03\b\x03\b\x03\t\x03\t\x03" +
		"\t\x03\t\x03\n\x03\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03" +
		"\f\x03\f\x03\f\x03\r\x03\r\x03\r\x03\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03" +
		"\x0E\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03" +
		"\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03" +
		"\x11\x03\x11\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12\x03\x13\x03" +
		"\x13\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x14\x03\x14\x03" +
		"\x15\x03\x15\x03\x15\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03\x16\x03" +
		"\x17\x03\x17\x03\x17\x03\x18\x03\x18\x03\x18\x03\x18\x03\x18\x03\x19\x03" +
		"\x19\x03\x19\x03\x19\x03\x19\x03\x1A\x03\x1A\x03\x1A\x03\x1A\x03\x1B\x03" +
		"\x1B\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E\x03" +
		"\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03\"\x03\"\x03\"\x03#\x03#\x03$\x03" +
		"$\x03$\x03%\x03%\x03%\x03&\x03&\x03&\x03&\x03\'\x03\'\x03\'\x03(\x03(" +
		"\x03(\x03(\x03)\x03)\x03)\x03*\x03*\x03*\x03+\x03+\x03,\x03,\x03-\x03" +
		"-\x03-\x03-\x03-\x03-\x03-\x03-\x03.\x03.\x03.\x03.\x03/\x03/\x03/\x03" +
		"/\x030\x030\x030\x030\x031\x031\x032\x032\x032\x032\x032\x032\x032\x03" +
		"2\x032\x052\u016C\n2\x033\x033\x034\x034\x035\x055\u0173\n5\x036\x036" +
		"\x036\x036\x056\u0179\n6\x037\x037\x037\x037\x038\x038\x038\x038\x038" +
		"\x039\x039\x079\u0186\n9\f9\x0E9\u0189\v9\x039\x039\x03:\x03:\x03:\x03" +
		":\x03;\x03;\x03;\x03;\x03;\x03<\x03<\x03<\x03<\x03<\x03=\x03=\x03=\x03" +
		"=\x03=\x03=\x03=\x03>\x03>\x03>\x03>\x03>\x03?\x03?\x03?\x03?\x03?\x03" +
		"@\x03@\x03A\x03A\x03B\x03B\x03C\x03C\x03D\x03D\x03E\x03E\x03F\x03F\x03" +
		"G\x03G\x03H\x03H\x03I\x03I\x07I\u01C0\nI\fI\x0EI\u01C3\vI\x03I\x03I\x03" +
		"J\x05J\u01C8\nJ\x03J\x07J\u01CB\nJ\fJ\x0EJ\u01CE\vJ\x02\x02\x02K\x03\x02" +
		"\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11" +
		"\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10" +
		"\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17-\x02" +
		"\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F=\x02" +
		" ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S\x02+" +
		"U\x02,W\x02-Y\x02.[\x02/]\x020_\x021a\x022c\x023e\x02\x02g\x02\x02i\x02" +
		"\x02k\x02\x02m\x024o\x025q\x026s\x027u\x028w\x029y\x02:{\x02;}\x02<\x7F" +
		"\x02=\x81\x02>\x83\x02?\x85\x02@\x87\x02A\x89\x02B\x8B\x02C\x8D\x02D\x8F" +
		"\x02\x02\x91\x02E\x93\x02F\x03\x02\t\x04\x02\f\f\x0F\x0F\x03\x022;\v\x02" +
		"$$))22^^ddhhppttvv\x06\x02\x02#%(*]_\x81\x05\x02\v\f\x0E\x0F\"\"\x05\x02" +
		"C\\aac|\x06\x022;C\\aac|\u01D0\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02" +
		"\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02" +
		"\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02" +
		"\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02" +
		"\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02" +
		"\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02" +
		"\x02%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+" +
		"\x03\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02" +
		"\x02\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02" +
		"\x029\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03" +
		"\x02\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02" +
		"\x02\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02" +
		"M\x03\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02" +
		"\x02\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02" +
		"\x02[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x02_\x03\x02\x02\x02\x02a\x03" +
		"\x02\x02\x02\x02c\x03\x02\x02\x02\x02m\x03\x02\x02\x02\x02o\x03\x02\x02" +
		"\x02\x02q\x03\x02\x02\x02\x02s\x03\x02\x02\x02\x02u\x03\x02\x02\x02\x02" +
		"w\x03\x02\x02\x02\x02y\x03\x02\x02\x02\x02{\x03\x02\x02\x02\x02}\x03\x02" +
		"\x02\x02\x02\x7F\x03\x02\x02\x02\x02\x81\x03\x02\x02\x02\x02\x83\x03\x02" +
		"\x02\x02\x02\x85\x03\x02\x02\x02\x02\x87\x03\x02\x02\x02\x02\x89\x03\x02" +
		"\x02\x02\x02\x8B\x03\x02\x02\x02\x02\x8D\x03\x02\x02\x02\x02\x91\x03\x02" +
		"\x02\x02\x02\x93\x03\x02\x02\x02\x03\x98\x03\x02\x02\x02\x05\x9D\x03\x02" +
		"\x02\x02\x07\xA3\x03\x02\x02\x02\t\xAA\x03\x02\x02\x02\v\xB1\x03\x02\x02" +
		"\x02\r\xB8\x03\x02\x02\x02\x0F\xBF\x03\x02\x02\x02\x11\xC5\x03\x02\x02" +
		"\x02\x13\xC9\x03\x02\x02\x02\x15\xCC\x03\x02\x02\x02\x17\xD1\x03\x02\x02" +
		"\x02\x19\xD6\x03\x02\x02\x02\x1B\xDB\x03\x02\x02\x02\x1D\xE2\x03\x02\x02" +
		"\x02\x1F\xE7\x03\x02\x02\x02!\xED\x03\x02\x02\x02#\xF5\x03\x02\x02\x02" +
		"%\xF8\x03\x02\x02\x02\'\xFD\x03\x02\x02\x02)\u0102\x03\x02\x02\x02+\u0105" +
		"\x03\x02\x02\x02-\u010B\x03\x02\x02\x02/\u010E\x03\x02\x02\x021\u0113" +
		"\x03\x02\x02\x023\u0118\x03\x02\x02\x025\u011C\x03\x02\x02\x027\u0120" +
		"\x03\x02\x02\x029\u0122\x03\x02\x02\x02;\u0124\x03\x02\x02\x02=\u0126" +
		"\x03\x02\x02\x02?\u0128\x03\x02\x02\x02A\u012A\x03\x02\x02\x02C\u012C" +
		"\x03\x02\x02\x02E\u012F\x03\x02\x02\x02G\u0131\x03\x02\x02\x02I\u0134" +
		"\x03\x02\x02\x02K\u0137\x03\x02\x02\x02M\u013B\x03\x02\x02\x02O\u013E" +
		"\x03\x02\x02\x02Q\u0142\x03\x02\x02\x02S\u0145\x03\x02\x02\x02U\u0148" +
		"\x03\x02\x02\x02W\u014A\x03\x02\x02\x02Y\u014C\x03\x02\x02\x02[\u0154" +
		"\x03\x02\x02\x02]\u0158\x03\x02\x02\x02_\u015C\x03\x02\x02\x02a\u0160" +
		"\x03\x02\x02\x02c\u016B\x03\x02\x02\x02e\u016D\x03\x02\x02\x02g\u016F" +
		"\x03\x02\x02\x02i\u0172\x03\x02\x02\x02k\u0178\x03\x02\x02\x02m\u017A" +
		"\x03\x02\x02\x02o\u017E\x03\x02\x02\x02q\u0183\x03\x02\x02\x02s\u018C" +
		"\x03\x02\x02\x02u\u0190\x03\x02\x02\x02w\u0195\x03\x02\x02\x02y\u019A" +
		"\x03\x02\x02\x02{\u01A1\x03\x02\x02\x02}\u01A6\x03\x02\x02\x02\x7F\u01AB" +
		"\x03\x02\x02\x02\x81\u01AD\x03\x02\x02\x02\x83\u01AF\x03\x02\x02\x02\x85" +
		"\u01B1\x03\x02\x02\x02\x87\u01B3\x03\x02\x02\x02\x89\u01B5\x03\x02\x02" +
		"\x02\x8B\u01B7\x03\x02\x02\x02\x8D\u01B9\x03\x02\x02\x02\x8F\u01BB\x03" +
		"\x02\x02\x02\x91\u01BD\x03\x02\x02\x02\x93\u01C7\x03\x02\x02\x02\x95\x99" +
		"\t\x02\x02\x02\x96\x97\x07\x0F\x02\x02\x97\x99\x07\f\x02\x02\x98\x95\x03" +
		"\x02\x02\x02\x98\x96\x03\x02\x02\x02\x99\x9A\x03\x02\x02\x02\x9A\x9B\b" +
		"\x02\x02\x02\x9B\x04\x03\x02\x02\x02\x9C\x9E\x05\x8FH\x02\x9D\x9C\x03" +
		"\x02\x02\x02\x9E\x9F\x03\x02\x02\x02\x9F\x9D\x03\x02\x02\x02\x9F\xA0\x03" +
		"\x02\x02\x02\xA0\xA1\x03\x02\x02\x02\xA1\xA2\b\x03\x02\x02\xA2\x06\x03" +
		"\x02\x02\x02\xA3\xA4\x07g\x02\x02\xA4\xA5\x07z\x02\x02\xA5\xA6\x07r\x02" +
		"\x02\xA6\xA7\x07q\x02\x02\xA7\xA8\x07t\x02\x02\xA8\xA9\x07v\x02\x02\xA9" +
		"\b\x03\x02\x02\x02\xAA\xAB\x07k\x02\x02\xAB\xAC\x07o\x02\x02\xAC\xAD\x07" +
		"r\x02\x02\xAD\xAE\x07q\x02\x02\xAE\xAF\x07t\x02\x02\xAF\xB0\x07v\x02\x02" +
		"\xB0\n\x03\x02\x02\x02\xB1\xB2\x07f\x02\x02\xB2\xB3\x07g\x02\x02\xB3\xB4" +
		"\x07h\x02\x02\xB4\xB5\x07k\x02\x02\xB5\xB6\x07p\x02\x02\xB6\xB7\x07g\x02" +
		"\x02\xB7\f\x03\x02\x02\x02\xB8\xB9\x07g\x02\x02\xB9\xBA\x07z\x02\x02\xBA" +
		"\xBB\x07v\x02\x02\xBB\xBC\x07g\x02\x02\xBC\xBD\x07t\x02\x02\xBD\xBE\x07" +
		"p\x02\x02\xBE\x0E\x03\x02\x02\x02\xBF\xC0\x07d\x02\x02\xC0\xC1\x07g\x02" +
		"\x02\xC1\xC2\x07i\x02\x02\xC2\xC3\x07k\x02\x02\xC3\xC4\x07p\x02\x02\xC4" +
		"\x10\x03\x02\x02\x02\xC5\xC6\x07g\x02\x02\xC6\xC7\x07p\x02\x02\xC7\xC8" +
		"\x07f\x02\x02\xC8\x12\x03\x02\x02\x02\xC9\xCA\x07k\x02\x02\xCA\xCB\x07" +
		"u\x02\x02\xCB\x14\x03\x02\x02\x02\xCC\xCD\x07u\x02\x02\xCD\xCE\x07m\x02" +
		"\x02\xCE\xCF\x07k\x02\x02\xCF\xD0\x07r\x02\x02\xD0\x16\x03\x02\x02\x02" +
		"\xD1\xD2\x07t\x02\x02\xD2\xD3\x07g\x02\x02\xD3\xD4\x07c\x02\x02\xD4\xD5" +
		"\x07f\x02\x02\xD5\x18\x03\x02\x02\x02\xD6\xD7\x07h\x02\x02\xD7\xD8\x07" +
		"t\x02\x02\xD8\xD9\x07g\x02\x02\xD9\xDA\x07g\x02\x02\xDA\x1A\x03\x02\x02" +
		"\x02\xDB\xDC\x07t\x02\x02\xDC\xDD\x07g\x02\x02\xDD\xDE\x07v\x02\x02\xDE" +
		"\xDF\x07w\x02\x02\xDF\xE0\x07t\x02\x02\xE0\xE1\x07p\x02\x02\xE1\x1C\x03" +
		"\x02\x02\x02\xE2\xE3\x07g\x02\x02\xE3\xE4\x07z\x02\x02\xE4\xE5\x07k\x02" +
		"\x02\xE5\xE6\x07v\x02\x02\xE6\x1E\x03\x02\x02\x02\xE7\xE8\x07r\x02\x02" +
		"\xE8\xE9\x07t\x02\x02\xE9\xEA\x07k\x02\x02\xEA\xEB\x07p\x02\x02\xEB\xEC" +
		"\x07v\x02\x02\xEC \x03\x02\x02\x02\xED\xEE\x07r\x02\x02\xEE\xEF\x07t\x02" +
		"\x02\xEF\xF0\x07k\x02\x02\xF0\xF1\x07p\x02\x02\xF1\xF2\x07v\x02\x02\xF2" +
		"\xF3\x07n\x02\x02\xF3\xF4\x07p\x02\x02\xF4\"\x03\x02\x02\x02\xF5\xF6\x07" +
		"k\x02\x02\xF6\xF7\x07h\x02\x02\xF7$\x03\x02\x02\x02\xF8\xF9\x07v\x02\x02" +
		"\xF9\xFA\x07j\x02\x02\xFA\xFB\x07g\x02\x02\xFB\xFC\x07p\x02\x02\xFC&\x03" +
		"\x02\x02\x02\xFD\xFE\x07g\x02\x02\xFE\xFF\x07n\x02\x02\xFF\u0100\x07u" +
		"\x02\x02\u0100\u0101\x07g\x02\x02\u0101(\x03\x02\x02\x02\u0102\u0103\x07" +
		"h\x02\x02\u0103\u0104\x07k\x02\x02\u0104*\x03\x02\x02\x02\u0105\u0106" +
		"\x07y\x02\x02\u0106\u0107\x07j\x02\x02\u0107\u0108\x07k\x02\x02\u0108" +
		"\u0109\x07n\x02\x02\u0109\u010A\x07g\x02\x02\u010A,\x03\x02\x02\x02\u010B" +
		"\u010C\x07f\x02\x02\u010C\u010D\x07q\x02\x02\u010D.\x03\x02\x02\x02\u010E" +
		"\u010F\x07f\x02\x02\u010F\u0110\x07q\x02\x02\u0110\u0111\x07p\x02\x02" +
		"\u0111\u0112\x07g\x02\x02\u01120\x03\x02\x02\x02\u0113\u0114\x07e\x02" +
		"\x02\u0114\u0115\x07c\x02\x02\u0115\u0116\x07n\x02\x02\u0116\u0117\x07" +
		"n\x02\x02\u01172\x03\x02\x02\x02\u0118\u0119\x07h\x02\x02\u0119\u011A" +
		"\x07u\x02\x02\u011A\u011B\x07v\x02\x02\u011B4\x03\x02\x02\x02\u011C\u011D" +
		"\x07u\x02\x02\u011D\u011E\x07p\x02\x02\u011E\u011F\x07f\x02\x02\u011F" +
		"6\x03\x02\x02\x02\u0120\u0121\x07,\x02\x02\u01218\x03\x02\x02\x02\u0122" +
		"\u0123\x071\x02\x02\u0123:\x03\x02\x02\x02\u0124\u0125\x07\'\x02\x02\u0125" +
		"<\x03\x02\x02\x02\u0126\u0127\x07-\x02\x02\u0127>\x03\x02\x02\x02\u0128" +
		"\u0129\x07/\x02\x02\u0129@\x03\x02\x02\x02\u012A\u012B\x07@\x02\x02\u012B" +
		"B\x03\x02\x02\x02\u012C\u012D\x07@\x02\x02\u012D\u012E\x07?\x02\x02\u012E" +
		"D\x03\x02\x02\x02\u012F\u0130\x07>\x02\x02\u0130F\x03\x02\x02\x02\u0131" +
		"\u0132\x07>\x02\x02\u0132\u0133\x07?\x02\x02\u0133H\x03\x02\x02\x02\u0134" +
		"\u0135\x07?\x02\x02\u0135\u0136\x07?\x02\x02\u0136J\x03\x02\x02\x02\u0137" +
		"\u0138\x07?\x02\x02\u0138\u0139\x07?\x02\x02\u0139\u013A\x07?\x02\x02" +
		"\u013AL\x03\x02\x02\x02\u013B\u013C\x07#\x02\x02\u013C\u013D\x07?\x02" +
		"\x02\u013DN\x03\x02\x02\x02\u013E\u013F\x07#\x02\x02\u013F\u0140\x07?" +
		"\x02\x02\u0140\u0141\x07?\x02\x02\u0141P\x03\x02\x02\x02\u0142\u0143\x07" +
		"(\x02\x02\u0143\u0144\x07(\x02\x02\u0144R\x03\x02\x02\x02\u0145\u0146" +
		"\x07~\x02\x02\u0146\u0147\x07~\x02\x02\u0147T\x03\x02\x02\x02\u0148\u0149" +
		"\x07?\x02\x02\u0149V\x03\x02\x02\x02\u014A\u014B\x07#\x02\x02\u014BX\x03" +
		"\x02\x02\x02\u014C\u014D\x07p\x02\x02\u014D\u014E\x07g\x02\x02\u014E\u014F" +
		"\x07y\x02\x02\u014F\u0150\x07r\x02\x02\u0150\u0151\x07c\x02\x02\u0151" +
		"\u0152\x07k\x02\x02\u0152\u0153\x07t\x02\x02\u0153Z\x03\x02\x02\x02\u0154" +
		"\u0155\x07n\x02\x02\u0155\u0156\x07g\x02\x02\u0156\u0157\x07p\x02\x02" +
		"\u0157\\\x03\x02\x02\x02\u0158\u0159\x07q\x02\x02\u0159\u015A\x07t\x02" +
		"\x02\u015A\u015B\x07f\x02\x02\u015B^\x03\x02\x02\x02\u015C\u015D\x07e" +
		"\x02\x02\u015D\u015E\x07j\x02\x02\u015E\u015F\x07t\x02\x02\u015F`\x03" +
		"\x02\x02\x02\u0160\u0161\t\x03\x02\x02\u0161b\x03\x02\x02\x02\u0162\u0163" +
		"\x07v\x02\x02\u0163\u0164\x07t\x02\x02\u0164\u0165\x07w\x02\x02\u0165" +
		"\u016C\x07g\x02\x02\u0166\u0167\x07h\x02\x02\u0167\u0168\x07c\x02\x02" +
		"\u0168\u0169\x07n\x02\x02\u0169\u016A\x07u\x02\x02\u016A\u016C\x07g\x02" +
		"\x02\u016B\u0162\x03\x02\x02\x02\u016B\u0166\x03\x02\x02\x02\u016Cd\x03" +
		"\x02\x02\x02\u016D\u016E\x07^\x02\x02\u016Ef\x03\x02\x02\x02\u016F\u0170" +
		"\t\x04\x02\x02\u0170h\x03\x02\x02\x02\u0171\u0173\t\x05\x02\x02\u0172" +
		"\u0171\x03\x02\x02\x02\u0173j\x03\x02\x02\x02\u0174\u0179\x05i5\x02\u0175" +
		"\u0176\x05e3\x02\u0176\u0177\x05g4\x02\u0177\u0179\x03\x02\x02\x02\u0178" +
		"\u0174\x03\x02\x02\x02\u0178\u0175\x03\x02\x02\x02\u0179l\x03\x02\x02" +
		"\x02\u017A\u017B\x05\x8BF\x02\u017B\u017C\x05k6\x02\u017C\u017D\x05\x8B" +
		"F\x02\u017Dn\x03\x02\x02\x02\u017E\u017F\x07p\x02\x02\u017F\u0180\x07" +
		"w\x02\x02\u0180\u0181\x07n\x02\x02\u0181\u0182\x07n\x02\x02\u0182p\x03" +
		"\x02\x02\x02\u0183\u0187\x05\x8DG\x02\u0184\u0186\x05k6\x02\u0185\u0184" +
		"\x03\x02\x02\x02\u0186\u0189\x03\x02\x02\x02\u0187\u0185\x03\x02\x02\x02" +
		"\u0187\u0188\x03\x02\x02\x02\u0188\u018A\x03\x02\x02\x02\u0189\u0187\x03" +
		"\x02\x02\x02\u018A\u018B\x05\x8DG\x02\u018Br\x03\x02\x02\x02\u018C\u018D" +
		"\x07k\x02\x02\u018D\u018E\x07p\x02\x02\u018E\u018F\x07v\x02\x02\u018F" +
		"t\x03\x02\x02\x02\u0190\u0191\x07d\x02\x02\u0191\u0192\x07q\x02\x02\u0192" +
		"\u0193\x07q\x02\x02\u0193\u0194\x07n\x02\x02\u0194v\x03\x02\x02\x02\u0195" +
		"\u0196\x07e\x02\x02\u0196\u0197\x07j\x02\x02\u0197\u0198\x07c\x02\x02" +
		"\u0198\u0199\x07t\x02\x02\u0199x\x03\x02\x02\x02\u019A\u019B\x07u\x02" +
		"\x02\u019B\u019C\x07v\x02\x02\u019C\u019D\x07t\x02\x02\u019D\u019E\x07" +
		"k\x02\x02\u019E\u019F\x07p\x02\x02\u019F\u01A0\x07i\x02\x02\u01A0z\x03" +
		"\x02\x02\x02\u01A1\u01A2\x07r\x02\x02\u01A2\u01A3\x07c\x02\x02\u01A3\u01A4" +
		"\x07k\x02\x02\u01A4\u01A5\x07t\x02\x02\u01A5|\x03\x02\x02\x02\u01A6\u01A7" +
		"\x07x\x02\x02\u01A7\u01A8\x07q\x02\x02\u01A8\u01A9\x07k\x02\x02\u01A9" +
		"\u01AA\x07f\x02\x02\u01AA~\x03\x02\x02\x02\u01AB\u01AC\x07*\x02\x02\u01AC" +
		"\x80\x03\x02\x02\x02\u01AD\u01AE\x07+\x02\x02\u01AE\x82\x03\x02\x02\x02" +
		"\u01AF\u01B0\x07]\x02\x02\u01B0\x84\x03\x02\x02\x02\u01B1\u01B2\x07_\x02" +
		"\x02\u01B2\x86\x03\x02\x02\x02\u01B3\u01B4\x07.\x02\x02\u01B4\x88\x03" +
		"\x02\x02\x02\u01B5\u01B6\x07=\x02\x02\u01B6\x8A\x03\x02\x02\x02\u01B7" +
		"\u01B8\x07)\x02\x02\u01B8\x8C\x03\x02\x02\x02\u01B9\u01BA\x07$\x02\x02" +
		"\u01BA\x8E\x03\x02\x02\x02\u01BB\u01BC\t\x06\x02\x02\u01BC\x90\x03\x02" +
		"\x02\x02\u01BD\u01C1\x07%\x02\x02\u01BE\u01C0\n\x02\x02\x02\u01BF\u01BE" +
		"\x03\x02\x02\x02\u01C0\u01C3\x03\x02\x02\x02\u01C1\u01BF\x03\x02\x02\x02" +
		"\u01C1\u01C2\x03\x02\x02\x02\u01C2\u01C4\x03\x02\x02\x02\u01C3\u01C1\x03" +
		"\x02\x02\x02\u01C4\u01C5\bI\x02\x02\u01C5\x92\x03\x02\x02\x02\u01C6\u01C8" +
		"\t\x07\x02\x02\u01C7\u01C6\x03\x02\x02\x02\u01C8\u01CC\x03\x02\x02\x02" +
		"\u01C9\u01CB\t\b\x02\x02\u01CA\u01C9\x03\x02\x02\x02\u01CB\u01CE\x03\x02" +
		"\x02\x02\u01CC\u01CA\x03\x02\x02\x02\u01CC\u01CD\x03\x02\x02\x02\u01CD" +
		"\x94\x03\x02\x02\x02\u01CE\u01CC\x03\x02\x02\x02\r\x02\x98\x9F\u016B\u0172" +
		"\u0178\u0187\u01C1\u01C7\u01CA\u01CC\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!WJSCLexer.__ATN) {
			WJSCLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(WJSCLexer._serializedATN));
		}

		return WJSCLexer.__ATN;
	}

}

